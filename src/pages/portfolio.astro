---
import "../styles/stylePF.css";

import AfterEffectimg from "../assets/ae.png";
import Illustratorimg from "../assets/ai.png";
import Photoshopimg from "../assets/ps.png";
import PremierProimg from "../assets/pr.png";
import Figmaimg from "../assets/figma.png";
import VsCodeimg from "../assets/vscode.png";
import SmashAppimg from "../assets/SmashApp.png";
import OliveOilimg from "../assets/OliveOil.png";
import AppleStoreimg from "../assets/AppleStore.png";
import MHWimg from "../assets/MHW.png";
import LaBanquePostalimg from "../assets/La banque postal.png";
import MarketingSchoolimg from "../assets/Marketing School.png";
import Profileimg from "../assets/profile.png";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Portfolio Armand VINCENT</title>

    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"
    ></script>
    ptite folie de description
    a
    aa
    
    <script
      src="https://cdn.jsdelivr.net/npm/gsap@3.12.7/dist/ScrollTrigger.min.js"
    ></script> -->
  </head>
  <body>
    <header>
      <h1 class="title title__anim">HEY !</h1>
      <h2 class="subtitle">Voici mon portfolio</h2>
    </header>

    <section class="profil">
      <img class="profil__picture" src={Profileimg.src} alt="" />

      <div class="profil__description-container">
        <h3 class="profil__name">Armand VINCENT</h3>
        <div class="profil__p">
          <p class="profil__job">Étudiant MMI</p>
          <p class="profil__description">
            J'aimerais travailler dans le domaine de l'UI/UX design.
          </p>
        </div>
      </div>
      <a
        target="_blank"
        href="/CV_Armand_VINCENT.pdf"
        class="profil__cv"
        id="CV">Mon CV</a
      >
    </section>
    <section class="tools">
      <div class="services-ticker-block">
        <div class="stb_line_single">
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
          <a href="#" class="stb-item">
            <span>My Tools</span>
          </a>
        </div>
      </div>

      <div class="circle">
        <img src={Illustratorimg.src} class="icon" id="icon1" />
        <img src={Photoshopimg.src} class="icon" id="icon2" />
        <img src={PremierProimg.src} class="icon" id="icon3" />
        <img src={AfterEffectimg.src} class="icon" id="icon4" />
        <img src={Figmaimg.src} class="icon" id="icon5" />
        <img src={VsCodeimg.src} class="icon" id="icon6" />
      </div>
    </section>

    <ul class="tools__container">
      <li class="tools__box">
        <div class="tools__box-identity">
          <img class="tools__img" src={Illustratorimg.src} alt="" />
          <p class="tools__box-name">Illustrator</p>
        </div>
        <p class="tools__box-description">
          J'utilise Illustrator pour créer des visuels dans différents projets.
          Cet outil me permet de réaliser des illustrations vectorielles et des
          logo de haute qualité.
        </p>
      </li>

      <li class="tools__box">
        <div class="tools__box-identity">
          <img class="tools__img" src={AfterEffectimg.src} alt="" />
          <p class="tools__box-name">After Effect</p>
        </div>
        <p class="tools__box-description">
          J'utilise After Effect pour créer des animations et des effets
          visuels. Cet outil me permet de réaliser des montages vidéos et du
          motion design de qualité.
        </p>
      </li>

      <li class="tools__box">
        <div class="tools__box-identity">
          <img class="tools__img" src={PremierProimg.src} alt="" />
          <p class="tools__box-name">Premier Pro</p>
        </div>
        <p class="tools__box-description">
          J'utilise Premier Pro pour réaliser des montages vidéos plus simple.
        </p>
      </li>

      <li class="tools__box">
        <div class="tools__box-identity">
          <img class="tools__img" src={Photoshopimg.src} alt="" />
          <p class="tools__box-name">Photoshop</p>
        </div>
        <p class="tools__box-description">
          J'utilise Photoshop pour retoucher des photos et créer des visuels.
        </p>
      </li>

      <li class="tools__box">
        <div class="tools__box-identity">
          <img class="tools__img" src={VsCodeimg.src} alt="" />
          <p class="tools__box-name">VsCode</p>
        </div>
        <p class="tools__box-description">
          J'utilise VsCode pour donner vie à mes projets web. Cet outil me
          permet de coder des sites web et des applications web.
        </p>
      </li>

      <li class="tools__box">
        <div class="tools__box-identity">
          <img class="tools__img" src={Figmaimg.src} alt="" />
          <p class="tools__box-name">Figma</p>
        </div>
        <p class="tools__box-description">
          J'utilise Figma pour créer des maquettes et des prototypes de site web
          et d'applications. Cet outil me permet de réaliser des interfaces
          utilisateur mais aussi des expériences utilisateur.
        </p>
      </li>
    </ul>

    <section class="projets">
      <h1 class="title title__anim2">Mes projets</h1>

      <ul class="projet__container">
        <li class="project__row">
          <div class="projet__box">
            <img src={SmashAppimg.src} alt="" class="projet__icon" />

            <div class="projet__content">
              <p class="projet__box-name">Smash Bros app</p>
              <p class="projet__box-description">
                Pour un projet d’école nous devions crée un prototype d’une
                application basé sur un univers de nore choix dont les
                personnages de notre univers se serviraient
              </p>
              <p class="projet__box-description">
                Pour réaliser mon projet nous devions créer au minimum 7 écrans
                différents
              </p>
            </div>
            <a href="/smashapp" class="projet__btn">See more</a>
          </div>
        </li>

        <li class="project__row projet__row--right">
          <div class="projet__box">
            <img src={OliveOilimg.src} alt="" class="projet__icon" />

            <div class="projet__content">
              <p class="projet__box-name">Olive Oil</p>
              <p class="projet__box-description">
                Pour un projet d’école nous devions créer une landig page pour
                une marque premium d’huile d’Olive.
              </p>
              <p class="projet__box-description">
                Pour réaliser mon projet je devais réaliser au minimum 4
                sections différentes. A travers ce projet j’ai essayer de faire
                des sections plus innoventes.
              </p>
            </div>
            <a href="/oliveoil" class="projet__btn">See more</a>
          </div>
        </li>

        <li class="project__row">
          <div class="projet__box">
            <img src={AppleStoreimg.src} alt="" class="projet__icon" />

            <div class="projet__content">
              <p class="projet__box-name">Apple Store</p>
              <p class="projet__box-description">
                Pendant ce projet scolaire nous devions réinventer le systeme de
                click&collect du site de notre choix.
              </p>
              <p class="projet__box-description">
                Pour ce faire nous avons durement annalyser l’expérience
                utilisateur lors du tunel d’achat sur le site d’Apple.
              </p>
            </div>
            <a href="/applestore" class="projet__btn">See more</a>
          </div>
        </li>

        <li class="project__row projet__row--right">
          <div class="projet__box">
            <img src={MHWimg.src} alt="" class="projet__icon" />

            <div class="projet__content">
              <p class="projet__box-name">Monster Hunter</p>
              <p class="projet__box-description">
                Durant ce projet j’ai essayer de respecter l’identité du jeu au
                maximum en créant l’équivalant d’un launcher pour le jeu.
              </p>
              <p class="projet__box-description">
                Mon objectif premier était d’utiliser les outils de prototypage
                au maximum
              </p>
            </div>
            <a href="/monsterhunter" class="projet__btn">See more</a>
          </div>
        </li>

        <li class="project__row">
          <div class="projet__box">
            <img src={LaBanquePostalimg.src} alt="" class="projet__icon" />

            <div class="projet__content">
              <p class="projet__box-name">Banque postal</p>
              <p class="projet__box-description">
                Afin de m’entrainer je me suis mis en tête de réaliser une
                section de la page d’accueil d’un de la banque postal.
              </p>
              <p class="projet__box-description">
                L’objectif principal était de rajeunir l’identité de la banque
                postal pour lui donner un aspect plus moderne.
              </p>
            </div>
            <a
              href="https://www.figma.com/proto/3aOhcONDktmxVHtTr2arDe/Training?page-id=0%3A1&node-id=1-21&viewport=-613%2C325%2C0.6&t=PHPPuB5iBUqPseeZ-1&scaling=min-zoom&content-scaling=fixed"
              class="projet__btn">See more</a
            >
          </div>
        </li>

        <li class="project__row projet__row--right">
          <div class="projet__box">
            <img src={MarketingSchoolimg.src} alt="" class="projet__icon" />

            <div class="projet__content">
              <p class="projet__box-name">Marketing School</p>
              <p class="projet__box-description">
                Afin de m’entrainer je me suis mis en tête de réaliser une
                section de la page d’accueil d’une école de marketing.
              </p>
              <p class="projet__box-description">
                L’objectif principal était d’attirer les gens a regarder les
                avantages ainsi que de vouloir scroll.
              </p>
            </div>
            <a
              href="https://www.figma.com/proto/3aOhcONDktmxVHtTr2arDe/Training?page-id=0%3A1&node-id=2-33&viewport=-613%2C-233%2C0.6&t=jlvAzJYCODGBr0uJ-1&scaling=min-zoom&content-scaling=fixed"
              class="projet__btn">See more</a
            >
          </div>
        </li>
      </ul>
    </section>
  </body>
</html>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  gsap.from(".title__anim", {
    x: -400, // Départ hors écran à gauche
    opacity: 0,
    duration: 1.5,
    ease: "back.out(1.2)", // Effet rapide et freinage
  });

  gsap.from(".title__anim2", {
    scrollTrigger: {
      trigger: ".title__anim2",
      start: "top 90%", // Déclenche l'animation lorsque l'élément entre dans la vue
      toggleActions: "play none none none", // Joue l'animation à l'entrée
    },
    x: -400, // Départ hors écran à gauche
    opacity: 0,
    duration: 1.5,
    ease: "back.out(1.2)", // Effet rapide et freinage
  });

  // Animation recomposition du texte pour le sous-titre
  const subtitleText = document.querySelector(".subtitle");
  const textContent = subtitleText?.textContent;
  subtitleText.innerHTML = "";
  textContent?.split("").forEach((letter, index) => {
    let span = document.createElement("span");
    span.textContent = letter;
    span.style.opacity = 0;
    subtitleText.appendChild(span);
    gsap.to(span, {
      opacity: 1,
      duration: 0.5,
      delay: index * 0.05,
    });
  });

  // animation du cercle
  const icons = document.querySelectorAll(".icon");
  const radius = 120; // Rayon du cercle
  const centerX = 150; // Centre du cercle
  const centerY = 150;

  function positionIcons(angleOffset = 0) {
    icons.forEach((icon, index) => {
      let angle = (index / icons.length) * Math.PI * 2 + angleOffset;
      let x = centerX + radius * Math.cos(angle) - 25;
      let y = centerY + radius * Math.sin(angle) - 25;
      icon.style.transform = `translate(${x}px, ${y}px)`;
    });
  }

  gsap.to(
    {},
    {
      duration: 10,
      repeat: -1,
      ease: "linear",
      onUpdate: function () {
        let rotationAngle = this.progress() * Math.PI * 2;
        positionIcons(rotationAngle);
      },
    },
  );

  gsap.utils.toArray(".stb_line_single").forEach((line, i) => {
    const links = line.querySelectorAll("a"),
      tl = horizontalLoop(links, {
        repeat: -1,
        speed: 1 + i * 0.5,
        reversed: i ? true : false,
        paddingRight: parseFloat(
          gsap.getProperty(links[0], "marginRight", "px"),
        ), // otherwise first element would be right up against the last when it loops. In this layout, the spacing is done with marginRight.
      });
    links.forEach((link) => {
      link.addEventListener("mouseenter", () =>
        gsap.to(tl, { timeScale: 0, overwrite: true }),
      );
      link.addEventListener("mouseleave", () =>
        gsap.to(tl, { timeScale: i ? -1 : 1, overwrite: true }),
      );
    });
  });
  function horizontalLoop(items, config) {
    items = gsap.utils.toArray(items);
    config = config || {};
    let tl = gsap.timeline({
        repeat: config.repeat,
        paused: config.paused,
        defaults: { ease: "none" },
        onReverseComplete: () =>
          tl.totalTime(tl.rawTime() + tl.duration() * 100),
      }),
      length = items.length,
      startX = items[0].offsetLeft,
      times = [],
      widths = [],
      xPercents = [],
      curIndex = 0,
      pixelsPerSecond = (config.speed || 1) * 100,
      snap =
        config.snap === false ? (v) => v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural
      totalWidth,
      curX,
      distanceToStart,
      distanceToLoop,
      item,
      i;
    gsap.set(items, {
      // convert "x" to "xPercent" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.
      xPercent: (i, el) => {
        let w = (widths[i] = parseFloat(gsap.getProperty(el, "width", "px")));
        xPercents[i] = snap(
          (parseFloat(gsap.getProperty(el, "x", "px")) / w) * 100 +
            gsap.getProperty(el, "xPercent"),
        );
        return xPercents[i];
      },
    });
    gsap.set(items, { x: 0 });
    totalWidth =
      items[length - 1].offsetLeft +
      (xPercents[length - 1] / 100) * widths[length - 1] -
      startX +
      items[length - 1].offsetWidth *
        gsap.getProperty(items[length - 1], "scaleX") +
      (parseFloat(config.paddingRight) || 0);
    for (i = 0; i < length; i++) {
      item = items[i];
      curX = (xPercents[i] / 100) * widths[i];
      distanceToStart = item.offsetLeft + curX - startX;
      distanceToLoop =
        distanceToStart + widths[i] * gsap.getProperty(item, "scaleX");
      tl.to(
        item,
        {
          xPercent: snap(((curX - distanceToLoop) / widths[i]) * 100),
          duration: distanceToLoop / pixelsPerSecond,
        },
        0,
      )
        .fromTo(
          item,
          {
            xPercent: snap(
              ((curX - distanceToLoop + totalWidth) / widths[i]) * 100,
            ),
          },
          {
            xPercent: xPercents[i],
            duration:
              (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,
            immediateRender: false,
          },
          distanceToLoop / pixelsPerSecond,
        )
        .add("label" + i, distanceToStart / pixelsPerSecond);
      times[i] = distanceToStart / pixelsPerSecond;
    }
    function toIndex(index, vars) {
      vars = vars || {};
      Math.abs(index - curIndex) > length / 2 &&
        (index += index > curIndex ? -length : length); // always go in the shortest direction
      let newIndex = gsap.utils.wrap(0, length, index),
        time = times[newIndex];
      if (time > tl.time() !== index > curIndex) {
        // if we're wrapping the timeline's playhead, make the proper adjustments
        vars.modifiers = { time: gsap.utils.wrap(0, tl.duration()) };
        time += tl.duration() * (index > curIndex ? 1 : -1);
      }
      curIndex = newIndex;
      vars.overwrite = true;
      return tl.tweenTo(time, vars);
    }
    tl.next = (vars) => toIndex(curIndex + 1, vars);
    tl.previous = (vars) => toIndex(curIndex - 1, vars);
    tl.current = () => curIndex;
    tl.toIndex = (index, vars) => toIndex(index, vars);
    tl.times = times;
    if (config.reversed) {
      tl.vars.onReverseComplete();
      tl.reverse();
    }
    return tl;
  }
</script>
